/*
 * lib-mapkernel : Un noyau de 2-cartes et des op√©rations.
 * Copyright (C) Moka Team, moka@sic.univ-poitiers.fr
 *               http://www.sic.univ-poitiers.fr/moka/
 *
 * This file is part of lib-mapkernel
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

//******************************************************************************
#include <list>
#include <queue>

#include "dynamic-coverage.hh"
//#include "static-coverage.hh"
//******************************************************************************
namespace Map2d
{
//******************************************************************************
INLINE
CMapGeneric::CMapGeneric(unsigned int ASizeDartArray)
  : CMap(ASizeDartArray)
{}
//******************************************************************************
INLINE
CDart* CMapGeneric::beta00(CDart* ADart) const
{ return beta0(beta0(ADart)); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta02(CDart* ADart) const
{ return beta2(beta0(ADart)); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta020(CDart* ADart) const
{ return beta0(beta2(beta0(ADart))); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta0202 (CDart* ADart) const
{ return beta2(beta0(beta2(beta0(ADart)))); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta02020(CDart* ADart) const
{ return beta0(beta2(beta0(beta2(beta0(ADart))))); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta0211(CDart* ADart) const
{ return beta1(beta1(beta2(beta0(ADart)))); }

//******************************************************************************
INLINE
CDart* CMapGeneric::beta11(CDart* ADart) const
{ return beta1(beta1(ADart)); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta1111(CDart* ADart) const
{ return beta1(beta1(beta1(beta1(ADart)))); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta112(CDart* ADart) const
{ return beta2(beta1(beta1(ADart))); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta1120(CDart* ADart) const
{ return beta0(beta2(beta1(beta1(ADart)))); }

//******************************************************************************
INLINE
CDart* CMapGeneric::beta12(CDart* ADart) const
{ return beta2(beta1(ADart)); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta121(CDart* ADart) const
{ return beta1(beta2(beta1(ADart))); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta20(CDart* ADart) const
{ return beta0(beta2(ADart)); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta21(CDart* ADart) const
{ return beta1(beta2(ADart)); }
//******************************************************************************
INLINE
CDart* CMapGeneric::beta212(CDart* ADart) const
{ return beta2(beta1(beta2(ADart))); }
//******************************************************************************
INLINE
CDart* CMapGeneric::getDirectInfoAsDart(CDart* ADart, int ADirectInfoIndex)
{
  assert(ADart!=NULL);
  return (CDart*) ADart->getDirectInfo(ADirectInfoIndex);
}
//*****************************************************************************
} // namespace Map2d
//******************************************************************************
