//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Image Management
//  @ File Name : IM_Zoom.h
//  @ Date : 20/04/2007
//  @ Author : Thibaut Aubrun : http://aubrun.thibaut.free.fr
//
//


#if !defined(_IM_ZOOM_H)
#define _IM_ZOOM_H

#include "transform.h"
namespace fogrimmi
{
  //==========================================================
  /// Specialisation Transformation - Zoom \n Source : operateurs de zoom Pandore
  //==========================================================
  class IM_Zoom : public IM_Transform
  {
  public:
    //----------------------------------------------------------
    /// calcul du zoom par plus proche voisin
    //----------------------------------------------------------
    bool zoomNN(IM_ImageMemory &ims, IM_ImageMemory &imd, float ratioX, float ratioY, int dplX=0, int dplY=0);

    //----------------------------------------------------------
    /// calcul du zoom par BiLineaire
    //----------------------------------------------------------
    bool zoomBL(IM_ImageMemory &ims, IM_ImageMemory &imd, float ratioX, float ratioY);

    //----------------------------------------------------------
    /// calcul du zoom par BiCubique
    //----------------------------------------------------------
    bool zoomBC(IM_ImageMemory &ims, IM_ImageMemory &imd, float ratioX, float ratioY);

  private:
    /// calcul des nouvelles valeurs
    float cubic (float offset, float v0, float v1, float v2, float v3);
    /// calcul pour une ligne les nouvelles valeurs
    float getCubicRow(IM_ImageMemory &ims, unsigned short int b, int x, int y, float offset);
    /// parcours de l'image et calcul bicubique
    bool PBicubicZoom(IM_ImageMemory &ims, IM_ImageMemory &imd, float ratioX, float ratioY );


  };
}//namespace fogrimmi
#endif  //_IM_ZOOM_H
